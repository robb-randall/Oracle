CLEAR SCREEN;
SET SERVEROUTPUT ON;

DECLARE
  V_OWNER ALL_USERS.USERNAME%TYPE := '&chain_owner';
  V_CHAIN USER_SCHEDULER_CHAINS.CHAIN_NAME%TYPE := '&chain_name';
BEGIN
  DBMS_OUTPUT.PUT_LINE ('DROP CHAIN');
  DBMS_SCHEDULER.DROP_CHAIN (V_OWNER||'.'V_CHAIN,TRUE);

  DBMS_OUTPUT.PUT_LINE ('CREATE CHAIN');
  DBMS_SCHEDULER.CREATE_CHAIN (V_OWNER||'.'V_CHAIN);

/* FIX CHAIN STEPS */
  DBMS_OUTPUT.PUT_LINE ('+ FIXING CHAIN STEPS');
  FOR IDX1 IN
  (
    SELECT * FROM ALL_SCHEDULER_CHAIN_STEPS@PROD WHERE OWNER=V_OWNER
    MINUS
    SELECT * FROM ALL_SCHEDULER_CHAIN_STEPS WHERE OWNER=V_OWNER
  )
  LOOP
    DBMS_OUTPUT.PUT ('|- '||IDX1.OWNER||'.'||IDX1.CHAIN_NAME||': '||IDX1.STEP_NAME||' - ');
    BEGIN
      DBMS_SCHEDULER.DEFINE_CHAIN_STEP
      (
        CHAIN_NAME => IDX1.OWNER||'.'||IDX1.CHAIN_NAME,
        STEP_NAME => IDX1.STEP_NAME,
        PROGRAM_NAME => IDX1.PROGRAM_OWNER||'.'||IDX1.PROGRAM_NAME
      );
      DBMS_OUTPUT.PUT_LINE('FIXED!');
    EXCEPTION
      WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE (SQLERRM);
    END;
  END LOOP;

/* FIX CHAIN RULES */
  DBMS_OUTPUT.PUT_LINE ('+ FIXING CHAIN RULES');
  FOR IDX1 IN
  (
    SELECT * FROM ALL_SCHEDULER_CHAIN_RULES@PROD WHERE OWNER=V_OWNER
    MINUS
    SELECT * FROM ALL_SCHEDULER_CHAIN_RULES WHERE OWNER=V_OWNER
  )
  LOOP
    DBMS_OUTPUT.PUT ('|- '||IDX1.OWNER||'.'||IDX1.CHAIN_NAME||': '||IDX1.RULE_OWNER||'.'||IDX1.RULE_NAME||' - ');
    BEGIN
      DBMS_SCHEDULER.DEFINE_CHAIN_RULE
      (
        CHAIN_NAME => IDX1.OWNER||'.'||IDX1.CHAIN_NAME,
        CONDITION => IDX1.CONDITION,
        ACTION => IDX1.ACTION,
        RULE_NAME => IDX1.RULE_OWNER||'.'||SUBSTR (IDX1.RULE_NAME,0,29)||'2',
        COMMENTS => IDX1.COMMENTS
      );
      DBMS_OUTPUT.PUT_LINE('FIXED!');
    EXCEPTION
      WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE (SQLERRM);
    END;
  END LOOP;

  DBMS_OUTPUT.PUT_LINE ('ENABLE CHAIN');
  DBMS_SCHEDULER.ENABLE (V_OWNER||'.'V_CHAIN);

END;
/

